{"ast":null,"code":"import React,{useState,useEffect,useContext}from'react';import{useLocation}from'react-router-dom';import Comment from'../Comment/Comment';import UserContext from'../../../context/UserContext';import\"./Post.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Post=()=>{const location=useLocation();const[comments,setComments]=useState([]);const[articleContent,setArticleContent]=useState([]);const[articleImage,setArticleImage]=useState([]);const{username,setUsername}=useContext(UserContext);const[commentToPost,setCommentToPost]=useState(\"\");const[isReadyToRender,setIsReadyToRender]=useState(false);const[isLoading,setIsLoading]=useState(false);useEffect(()=>{const fetchAndSortComments=async()=>{const fetchedComments=await fetchComments();const fetchedCommentsJson=fetchedComments.rows;const sortedComments=sortCommentsOnLevel(fetchedCommentsJson);// fetchedComments is not an array, it's an object\nsetComments(sortedComments);};fetchAndSortComments();setIsReadyToRender(true);fetchArticle();},[]);const handleReplySubmission=async()=>{const fetchedComments=await fetchComments();setComments(fetchedComments.rows);};const handleSubmitCommentButton=async()=>{if(username==null){}else{const author=username;const comment=commentToPost;const idOfParentPost=location.state.id;setIsLoading(true);try{await fetch(\"http://localhost:5000/api/comments/\".concat(idOfParentPost),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({author:author,comment:comment,idOfParentPost:idOfParentPost,level:0})});const fetchedComments=await fetchComments();// while we await it, have the button turn grey, and have a little swirling loading sign replace the text on the button\nsetComments(fetchedComments.rows);setCommentToPost(\"\");}catch(error){console.log(\"uh oh! error is \",error);}finally{// setIsLoading(false);\nsetTimeout(()=>{setIsLoading(false);const newCommentElement=document.getElementById('new-comment');if(newCommentElement){newCommentElement.scrollIntoView({behavior:'smooth'});// Add the highlight class for the fade effect\nnewCommentElement.classList.add('highlight');}},1000);}}};const changeCommentToPost=event=>{setCommentToPost(event.target.value);};const fetchComments=async()=>{try{const postId=location.state.id;const response=await fetch(\"http://localhost:5000/api/comments/\".concat(postId));const data=await response.json();return data;}catch(error){console.log(\"Error fetching comments : \",error);}};const sortCommentsOnLevel=dataComments=>{// sort the comments on order, so all 0's in front, then 1's, etc\nif(dataComments.length===0){return dataComments;}const sortedDataComments=dataComments.sort((firstComment,secondComment)=>{if(firstComment.level>secondComment.level){return 1;}else if(firstComment.level===secondComment.level){return 0;}else return-1;});return sortedDataComments;};const divideCommentsIntoLevelArrays=()=>{// first, separate comments into new Level arrays - one array for all Level0's, another for Level1's, etc\n// why does dCILA get called again when button is clicked?\nconst levelArrays=[];var currLevel=0;while(true){const temp=comments.filter(comment=>{// comments isn't an array yet\nreturn comment.level===currLevel;});if(temp.length===0){break;}else{levelArrays.push(temp);currLevel++;}}return levelArrays;};const renderEachLevel=(levelArrays,currentComment,level)=>{const renderedComments=[];const temp=[];// render itself\nrenderedComments.push(renderComment(currentComment));// if comment is on last level of levelArrays, we need to stop it cuz otherwise will \n// trigger outOfBounds error\nif(level===levelArrays.length-1){return renderedComments;}else{// find all matching child comments in next level\nfor(let i=0;i<levelArrays[level+1].length;i++){if(levelArrays[level+1][i].parent_comment_id==currentComment.id){// parentCommentId undefined?\ntemp.push(levelArrays[level+1][i]);}}// render all of its child comments\nfor(let i=0;i<temp.length;i++){const arrayOfChildElementsHTML=renderEachLevel(levelArrays,temp[i],level+1);for(let j=0;j<arrayOfChildElementsHTML.length;j++){renderedComments.push(arrayOfChildElementsHTML[j]);}}// if no children, then return renderedComments\nreturn renderedComments;}// 1) render itself\n// 2) make empty array\n// 3) go through next level array and add any posts whose parentComment matches postId to array\n// 4) for every element in array : \n// 5) renderComment(postId, level + 1)\n};const renderComment=comment=>{return/*#__PURE__*/ (// <Comment />\n// id={index === comments.length - 1 ? \"new-comment\" : null} \n_jsx(Comment,{post:location.state.id,author:comment.author,comment:comment.content,level:comment.level,id:comment.id,handleReplySubmission:handleReplySubmission}));};const renderComments=()=>{if(comments.length===0){// console.log(\"no comments available to render yet\");\n}else{const overallRenderedComments=[];const levelArrays=divideCommentsIntoLevelArrays();// not an array\nfor(let i=0;i<levelArrays[0].length;i++){const arrayOfRecursiveElementsHTML=renderEachLevel(levelArrays,levelArrays[0][i],0);for(let j=0;j<arrayOfRecursiveElementsHTML.length;j++){overallRenderedComments.push(/*#__PURE__*/React.cloneElement(arrayOfRecursiveElementsHTML[j],{key:arrayOfRecursiveElementsHTML[j].props.id}));}}return overallRenderedComments;}};const fetchArticle=async()=>{const response1=await fetch(location.state.article_url);const articleContents=await response1.json();setArticleContent(articleContents.content);try{// const response2 = await fetch(location.state.image_url);\n// console.log(\"2\");\n// const articleImageBlob = await response2.blob();\n// console.log(\"articleImage : \", articleImage);\n// const articleImageUrl = URL.createObjectURL(articleImageBlob);\n// setArticleImage(articleImageUrl);\nconsole.log(\"finished\");}catch(error){console.log(\"Error : \",error);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{id:\"post-title-and-content-section\",children:[/*#__PURE__*/_jsx(\"div\",{id:\"post-title-div\",children:location.state.title}),/*#__PURE__*/_jsx(\"div\",{id:\"post-image-div\",children:articleImage==null?/*#__PURE__*/_jsx(\"div\",{}):/*#__PURE__*/ // <img id = \"article-image\" src={articleImage} alt=\"Article Image\" />\n_jsx(\"img\",{id:\"article-image\",src:location.state.image_url,alt:location.state.title})}),/*#__PURE__*/_jsx(\"div\",{id:\"post-content-div\",children:articleContent==null?/*#__PURE__*/_jsx(\"div\",{}):/*#__PURE__*/_jsx(\"div\",{children:articleContent})})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"post-new-comment-box\",value:commentToPost,placeholder:\"Post comment here\",onChange:changeCommentToPost}),/*#__PURE__*/_jsx(\"button\",{id:\"submit-comment-button\",onClick:handleSubmitCommentButton,children:isLoading?/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"}):/*#__PURE__*/_jsx(\"div\",{children:\"Submit\"})}),/*#__PURE__*/_jsxs(\"div\",{id:\"comments-section-title\",children:[\"All Comments : \",comments.length]}),/*#__PURE__*/_jsx(\"div\",{className:\"comments-section\",children:isReadyToRender?renderComments():/*#__PURE__*/_jsx(\"p\",{children:\"Loading comments...\"})})]});};export default Post;","map":{"version":3,"names":["React","useState","useEffect","useContext","useLocation","Comment","UserContext","jsx","_jsx","jsxs","_jsxs","Post","location","comments","setComments","articleContent","setArticleContent","articleImage","setArticleImage","username","setUsername","commentToPost","setCommentToPost","isReadyToRender","setIsReadyToRender","isLoading","setIsLoading","fetchAndSortComments","fetchedComments","fetchComments","fetchedCommentsJson","rows","sortedComments","sortCommentsOnLevel","fetchArticle","handleReplySubmission","handleSubmitCommentButton","author","comment","idOfParentPost","state","id","fetch","concat","method","headers","body","JSON","stringify","level","error","console","log","setTimeout","newCommentElement","document","getElementById","scrollIntoView","behavior","classList","add","changeCommentToPost","event","target","value","postId","response","data","json","dataComments","length","sortedDataComments","sort","firstComment","secondComment","divideCommentsIntoLevelArrays","levelArrays","currLevel","temp","filter","push","renderEachLevel","currentComment","renderedComments","renderComment","i","parent_comment_id","arrayOfChildElementsHTML","j","post","content","renderComments","overallRenderedComments","arrayOfRecursiveElementsHTML","cloneElement","key","props","response1","article_url","articleContents","children","title","src","image_url","alt","type","placeholder","onChange","onClick","className"],"sources":["C:/Users/frank/Desktop/3. Projects/1. Personal Projects/Boxing Website Stuff/Boxing Forum Website/client/src/components/Posts/Post/Post.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Comment from '../Comment/Comment';\r\nimport UserContext from '../../../context/UserContext';\r\nimport \"./Post.css\";\r\n\r\n\r\nconst Post = () => {\r\n\r\n    const location = useLocation();\r\n    const [comments, setComments] = useState([]);\r\n    const [articleContent, setArticleContent] = useState([]);\r\n    const [articleImage, setArticleImage] = useState([]);\r\n\r\n    const { username, setUsername } = useContext(UserContext);\r\n    const [commentToPost, setCommentToPost] = useState(\"\");\r\n    const [isReadyToRender, setIsReadyToRender] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    \r\n\r\n    useEffect(() => {\r\n        const fetchAndSortComments = async () => {\r\n            const fetchedComments = await fetchComments();\r\n            const fetchedCommentsJson = fetchedComments.rows;\r\n\r\n            const sortedComments = sortCommentsOnLevel(fetchedCommentsJson); // fetchedComments is not an array, it's an object\r\n            setComments(sortedComments);\r\n        };\r\n\r\n        fetchAndSortComments();\r\n        setIsReadyToRender(true);\r\n\r\n        fetchArticle();\r\n    }, []);\r\n\r\n    const handleReplySubmission = async () => {\r\n\r\n        const fetchedComments = await fetchComments();\r\n        setComments(fetchedComments.rows);\r\n\r\n    };\r\n\r\n    const handleSubmitCommentButton = async () => {\r\n\r\n        if (username == null) {\r\n\r\n        }\r\n        else {\r\n\r\n            const author = username;\r\n            const comment = commentToPost;\r\n            const idOfParentPost = location.state.id;\r\n\r\n            setIsLoading(true);\r\n            try {\r\n                await fetch(`http://localhost:5000/api/comments/${idOfParentPost}`, {\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify({\r\n                        author: author,\r\n                        comment: comment,\r\n                        idOfParentPost: idOfParentPost,\r\n                        level: 0\r\n                    })\r\n                });\r\n\r\n                const fetchedComments = await fetchComments();\r\n\r\n                // while we await it, have the button turn grey, and have a little swirling loading sign replace the text on the button\r\n                setComments(fetchedComments.rows);\r\n                setCommentToPost(\"\");\r\n            }\r\n            catch (error) {\r\n                console.log(\"uh oh! error is \", error);\r\n            }\r\n            finally {\r\n                // setIsLoading(false);\r\n                setTimeout(() => {\r\n                    setIsLoading(false);\r\n\r\n                    const newCommentElement = document.getElementById('new-comment');\r\n                    if (newCommentElement) {\r\n                        newCommentElement.scrollIntoView({ behavior: 'smooth' });\r\n\r\n                        // Add the highlight class for the fade effect\r\n                        newCommentElement.classList.add('highlight');\r\n                    }\r\n                }, 1000);\r\n\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    const changeCommentToPost = (event) => {\r\n        setCommentToPost(event.target.value);\r\n    };\r\n\r\n    const fetchComments = async () => {\r\n        try {\r\n            const postId = location.state.id;\r\n            const response = await fetch(`http://localhost:5000/api/comments/${postId}`);\r\n\r\n            const data = await response.json();\r\n            return data;\r\n        }\r\n        catch (error) {\r\n            console.log(\"Error fetching comments : \", error);\r\n        }\r\n    };\r\n\r\n    const sortCommentsOnLevel = (dataComments) => {\r\n        // sort the comments on order, so all 0's in front, then 1's, etc\r\n\r\n        if (dataComments.length === 0) {\r\n            return dataComments;\r\n        }\r\n\r\n        const sortedDataComments = dataComments.sort((firstComment, secondComment) => {\r\n            if (firstComment.level > secondComment.level) {\r\n                return 1;\r\n            }\r\n            else if (firstComment.level === secondComment.level) {\r\n                return 0;\r\n            }\r\n            else return -1;\r\n        });\r\n        return sortedDataComments;\r\n    }\r\n\r\n    const divideCommentsIntoLevelArrays = () => {\r\n        // first, separate comments into new Level arrays - one array for all Level0's, another for Level1's, etc\r\n\r\n        // why does dCILA get called again when button is clicked?\r\n        const levelArrays = [];\r\n        var currLevel = 0;\r\n\r\n        while (true) {\r\n\r\n            const temp = comments.filter((comment) => { // comments isn't an array yet\r\n                return comment.level === currLevel;\r\n            });\r\n            if (temp.length === 0) {\r\n\r\n                break;\r\n            }\r\n            else {\r\n\r\n                levelArrays.push(temp);\r\n                currLevel++;\r\n            }\r\n        }\r\n\r\n\r\n\r\n        return levelArrays;\r\n    };\r\n\r\n    const renderEachLevel = (levelArrays, currentComment, level) => {\r\n\r\n        const renderedComments = [];\r\n        const temp = [];\r\n        // render itself\r\n\r\n        renderedComments.push(renderComment(currentComment));\r\n\r\n        // if comment is on last level of levelArrays, we need to stop it cuz otherwise will \r\n        // trigger outOfBounds error\r\n        if (level === levelArrays.length - 1) {\r\n\r\n            return renderedComments;\r\n        }\r\n        else {\r\n            // find all matching child comments in next level\r\n            for (let i = 0; i < levelArrays[level + 1].length; i++) {\r\n                if (levelArrays[level + 1][i].parent_comment_id == currentComment.id) { // parentCommentId undefined?\r\n                    temp.push(levelArrays[level + 1][i]);\r\n\r\n                }\r\n            }\r\n\r\n            // render all of its child comments\r\n\r\n            for (let i = 0; i < temp.length; i++) {\r\n                const arrayOfChildElementsHTML = renderEachLevel(levelArrays, temp[i], level + 1);\r\n                for (let j = 0; j < arrayOfChildElementsHTML.length; j++) {\r\n                    renderedComments.push(arrayOfChildElementsHTML[j]);\r\n                }\r\n            }\r\n\r\n            // if no children, then return renderedComments\r\n\r\n            return renderedComments;\r\n        }\r\n\r\n        // 1) render itself\r\n\r\n        // 2) make empty array\r\n        // 3) go through next level array and add any posts whose parentComment matches postId to array\r\n        // 4) for every element in array : \r\n        // 5) renderComment(postId, level + 1)\r\n\r\n    };\r\n\r\n    const renderComment = (comment) => {\r\n\r\n        return (\r\n            // <Comment />\r\n            // id={index === comments.length - 1 ? \"new-comment\" : null} \r\n\r\n            <Comment post={location.state.id} author={comment.author} comment={comment.content} level={comment.level} id={comment.id}\r\n                handleReplySubmission={handleReplySubmission} />\r\n        );\r\n    };\r\n\r\n    const renderComments = () => {\r\n        if (comments.length === 0) {\r\n            // console.log(\"no comments available to render yet\");\r\n        }\r\n        else {\r\n\r\n            const overallRenderedComments = [];\r\n            const levelArrays = divideCommentsIntoLevelArrays(); // not an array\r\n\r\n            for (let i = 0; i < levelArrays[0].length; i++) {\r\n                const arrayOfRecursiveElementsHTML = renderEachLevel(levelArrays, levelArrays[0][i], 0);\r\n                for (let j = 0; j < arrayOfRecursiveElementsHTML.length; j++) {\r\n                    overallRenderedComments.push(\r\n                        React.cloneElement(arrayOfRecursiveElementsHTML[j], { key: arrayOfRecursiveElementsHTML[j].props.id })\r\n                    );\r\n                }\r\n            }\r\n\r\n            return overallRenderedComments;\r\n        }\r\n    }\r\n\r\n    const fetchArticle = async () => {\r\n        const response1 = await fetch(location.state.article_url);\r\n        const articleContents = await response1.json();\r\n\r\n        setArticleContent(articleContents.content);\r\n\r\n        try {\r\n            // const response2 = await fetch(location.state.image_url);\r\n   \r\n            // console.log(\"2\");\r\n            // const articleImageBlob = await response2.blob();\r\n            // console.log(\"articleImage : \", articleImage);\r\n    \r\n            // const articleImageUrl = URL.createObjectURL(articleImageBlob);\r\n    \r\n    \r\n            // setArticleImage(articleImageUrl);\r\n            \r\n            console.log(\"finished\");\r\n        }\r\n        catch(error) {\r\n            console.log(\"Error : \", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"post-title-and-content-section\">\r\n                <div id=\"post-title-div\">{location.state.title}</div>\r\n                <div id=\"post-image-div\">\r\n                    {articleImage == null ? (\r\n                        <div></div>\r\n                    ) : (\r\n                        // <img id = \"article-image\" src={articleImage} alt=\"Article Image\" />\r\n\r\n                        <img id=\"article-image\" src={location.state.image_url} alt={location.state.title} />\r\n\r\n                    )}\r\n                </div>\r\n                <div id=\"post-content-div\">\r\n                    {articleContent == null ? (\r\n                        <div></div>\r\n                    ) : (\r\n                        <div>{articleContent}</div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <input type=\"text\" id=\"post-new-comment-box\" value={commentToPost}\r\n                placeholder=\"Post comment here\" onChange={changeCommentToPost}></input>\r\n            <button id=\"submit-comment-button\" onClick={handleSubmitCommentButton}>\r\n                {isLoading ?\r\n                    (<div className=\"spinner\"></div>)\r\n                    : (<div>\r\n                        Submit\r\n                    </div>)}\r\n            </button>\r\n\r\n            <div id=\"comments-section-title\">All Comments : {comments.length}</div>\r\n\r\n            <div className=\"comments-section\">\r\n                {isReadyToRender ? renderComments() : <p>Loading comments...</p>}\r\n\r\n                {/* {comments.map((comment, index) => (\r\n                    <div\r\n                        key={comment.id}\r\n                        id={index === comments.length - 1 ? \"new-comment\" : null} \r\n                        className=\"comment\"\r\n                    >\r\n                        {comment.content}\r\n                    </div>\r\n                ))} */}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Post;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,UAAU,KAAQ,OAAO,CAC9D,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,CAAAC,OAAO,KAAM,oBAAoB,CACxC,MAAO,CAAAC,WAAW,KAAM,8BAA8B,CACtD,MAAO,YAAY,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAGpB,KAAM,CAAAC,IAAI,CAAGA,CAAA,GAAM,CAEf,KAAM,CAAAC,QAAQ,CAAGR,WAAW,CAAC,CAAC,CAC9B,KAAM,CAACS,QAAQ,CAAEC,WAAW,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACc,cAAc,CAAEC,iBAAiB,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CACxD,KAAM,CAACgB,YAAY,CAAEC,eAAe,CAAC,CAAGjB,QAAQ,CAAC,EAAE,CAAC,CAEpD,KAAM,CAAEkB,QAAQ,CAAEC,WAAY,CAAC,CAAGjB,UAAU,CAACG,WAAW,CAAC,CACzD,KAAM,CAACe,aAAa,CAAEC,gBAAgB,CAAC,CAAGrB,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAACsB,eAAe,CAAEC,kBAAkB,CAAC,CAAGvB,QAAQ,CAAC,KAAK,CAAC,CAC7D,KAAM,CAACwB,SAAS,CAAEC,YAAY,CAAC,CAAGzB,QAAQ,CAAC,KAAK,CAAC,CAGjDC,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAyB,oBAAoB,CAAG,KAAAA,CAAA,GAAY,CACrC,KAAM,CAAAC,eAAe,CAAG,KAAM,CAAAC,aAAa,CAAC,CAAC,CAC7C,KAAM,CAAAC,mBAAmB,CAAGF,eAAe,CAACG,IAAI,CAEhD,KAAM,CAAAC,cAAc,CAAGC,mBAAmB,CAACH,mBAAmB,CAAC,CAAE;AACjEhB,WAAW,CAACkB,cAAc,CAAC,CAC/B,CAAC,CAEDL,oBAAoB,CAAC,CAAC,CACtBH,kBAAkB,CAAC,IAAI,CAAC,CAExBU,YAAY,CAAC,CAAC,CAClB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,qBAAqB,CAAG,KAAAA,CAAA,GAAY,CAEtC,KAAM,CAAAP,eAAe,CAAG,KAAM,CAAAC,aAAa,CAAC,CAAC,CAC7Cf,WAAW,CAACc,eAAe,CAACG,IAAI,CAAC,CAErC,CAAC,CAED,KAAM,CAAAK,yBAAyB,CAAG,KAAAA,CAAA,GAAY,CAE1C,GAAIjB,QAAQ,EAAI,IAAI,CAAE,CAEtB,CAAC,IACI,CAED,KAAM,CAAAkB,MAAM,CAAGlB,QAAQ,CACvB,KAAM,CAAAmB,OAAO,CAAGjB,aAAa,CAC7B,KAAM,CAAAkB,cAAc,CAAG3B,QAAQ,CAAC4B,KAAK,CAACC,EAAE,CAExCf,YAAY,CAAC,IAAI,CAAC,CAClB,GAAI,CACA,KAAM,CAAAgB,KAAK,uCAAAC,MAAA,CAAuCJ,cAAc,EAAI,CAChEK,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACjBX,MAAM,CAAEA,MAAM,CACdC,OAAO,CAAEA,OAAO,CAChBC,cAAc,CAAEA,cAAc,CAC9BU,KAAK,CAAE,CACX,CAAC,CACL,CAAC,CAAC,CAEF,KAAM,CAAArB,eAAe,CAAG,KAAM,CAAAC,aAAa,CAAC,CAAC,CAE7C;AACAf,WAAW,CAACc,eAAe,CAACG,IAAI,CAAC,CACjCT,gBAAgB,CAAC,EAAE,CAAC,CACxB,CACA,MAAO4B,KAAK,CAAE,CACVC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAEF,KAAK,CAAC,CAC1C,CAAC,OACO,CACJ;AACAG,UAAU,CAAC,IAAM,CACb3B,YAAY,CAAC,KAAK,CAAC,CAEnB,KAAM,CAAA4B,iBAAiB,CAAGC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAChE,GAAIF,iBAAiB,CAAE,CACnBA,iBAAiB,CAACG,cAAc,CAAC,CAAEC,QAAQ,CAAE,QAAS,CAAC,CAAC,CAExD;AACAJ,iBAAiB,CAACK,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC,CAChD,CACJ,CAAC,CAAE,IAAI,CAAC,CAGZ,CACJ,CACJ,CAAC,CAED,KAAM,CAAAC,mBAAmB,CAAIC,KAAK,EAAK,CACnCxC,gBAAgB,CAACwC,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CACxC,CAAC,CAED,KAAM,CAAAnC,aAAa,CAAG,KAAAA,CAAA,GAAY,CAC9B,GAAI,CACA,KAAM,CAAAoC,MAAM,CAAGrD,QAAQ,CAAC4B,KAAK,CAACC,EAAE,CAChC,KAAM,CAAAyB,QAAQ,CAAG,KAAM,CAAAxB,KAAK,uCAAAC,MAAA,CAAuCsB,MAAM,CAAE,CAAC,CAE5E,KAAM,CAAAE,IAAI,CAAG,KAAM,CAAAD,QAAQ,CAACE,IAAI,CAAC,CAAC,CAClC,MAAO,CAAAD,IAAI,CACf,CACA,MAAOjB,KAAK,CAAE,CACVC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAEF,KAAK,CAAC,CACpD,CACJ,CAAC,CAED,KAAM,CAAAjB,mBAAmB,CAAIoC,YAAY,EAAK,CAC1C;AAEA,GAAIA,YAAY,CAACC,MAAM,GAAK,CAAC,CAAE,CAC3B,MAAO,CAAAD,YAAY,CACvB,CAEA,KAAM,CAAAE,kBAAkB,CAAGF,YAAY,CAACG,IAAI,CAAC,CAACC,YAAY,CAAEC,aAAa,GAAK,CAC1E,GAAID,YAAY,CAACxB,KAAK,CAAGyB,aAAa,CAACzB,KAAK,CAAE,CAC1C,MAAO,EAAC,CACZ,CAAC,IACI,IAAIwB,YAAY,CAACxB,KAAK,GAAKyB,aAAa,CAACzB,KAAK,CAAE,CACjD,MAAO,EAAC,CACZ,CAAC,IACI,OAAO,CAAC,CAAC,CAClB,CAAC,CAAC,CACF,MAAO,CAAAsB,kBAAkB,CAC7B,CAAC,CAED,KAAM,CAAAI,6BAA6B,CAAGA,CAAA,GAAM,CACxC;AAEA;AACA,KAAM,CAAAC,WAAW,CAAG,EAAE,CACtB,GAAI,CAAAC,SAAS,CAAG,CAAC,CAEjB,MAAO,IAAI,CAAE,CAET,KAAM,CAAAC,IAAI,CAAGjE,QAAQ,CAACkE,MAAM,CAAEzC,OAAO,EAAK,CAAE;AACxC,MAAO,CAAAA,OAAO,CAACW,KAAK,GAAK4B,SAAS,CACtC,CAAC,CAAC,CACF,GAAIC,IAAI,CAACR,MAAM,GAAK,CAAC,CAAE,CAEnB,MACJ,CAAC,IACI,CAEDM,WAAW,CAACI,IAAI,CAACF,IAAI,CAAC,CACtBD,SAAS,EAAE,CACf,CACJ,CAIA,MAAO,CAAAD,WAAW,CACtB,CAAC,CAED,KAAM,CAAAK,eAAe,CAAGA,CAACL,WAAW,CAAEM,cAAc,CAAEjC,KAAK,GAAK,CAE5D,KAAM,CAAAkC,gBAAgB,CAAG,EAAE,CAC3B,KAAM,CAAAL,IAAI,CAAG,EAAE,CACf;AAEAK,gBAAgB,CAACH,IAAI,CAACI,aAAa,CAACF,cAAc,CAAC,CAAC,CAEpD;AACA;AACA,GAAIjC,KAAK,GAAK2B,WAAW,CAACN,MAAM,CAAG,CAAC,CAAE,CAElC,MAAO,CAAAa,gBAAgB,CAC3B,CAAC,IACI,CACD;AACA,IAAK,GAAI,CAAAE,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGT,WAAW,CAAC3B,KAAK,CAAG,CAAC,CAAC,CAACqB,MAAM,CAAEe,CAAC,EAAE,CAAE,CACpD,GAAIT,WAAW,CAAC3B,KAAK,CAAG,CAAC,CAAC,CAACoC,CAAC,CAAC,CAACC,iBAAiB,EAAIJ,cAAc,CAACzC,EAAE,CAAE,CAAE;AACpEqC,IAAI,CAACE,IAAI,CAACJ,WAAW,CAAC3B,KAAK,CAAG,CAAC,CAAC,CAACoC,CAAC,CAAC,CAAC,CAExC,CACJ,CAEA;AAEA,IAAK,GAAI,CAAAA,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGP,IAAI,CAACR,MAAM,CAAEe,CAAC,EAAE,CAAE,CAClC,KAAM,CAAAE,wBAAwB,CAAGN,eAAe,CAACL,WAAW,CAAEE,IAAI,CAACO,CAAC,CAAC,CAAEpC,KAAK,CAAG,CAAC,CAAC,CACjF,IAAK,GAAI,CAAAuC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGD,wBAAwB,CAACjB,MAAM,CAAEkB,CAAC,EAAE,CAAE,CACtDL,gBAAgB,CAACH,IAAI,CAACO,wBAAwB,CAACC,CAAC,CAAC,CAAC,CACtD,CACJ,CAEA;AAEA,MAAO,CAAAL,gBAAgB,CAC3B,CAEA;AAEA;AACA;AACA;AACA;AAEJ,CAAC,CAED,KAAM,CAAAC,aAAa,CAAI9C,OAAO,EAAK,CAE/B,oBACI;AACA;AAEA9B,IAAA,CAACH,OAAO,EAACoF,IAAI,CAAE7E,QAAQ,CAAC4B,KAAK,CAACC,EAAG,CAACJ,MAAM,CAAEC,OAAO,CAACD,MAAO,CAACC,OAAO,CAAEA,OAAO,CAACoD,OAAQ,CAACzC,KAAK,CAAEX,OAAO,CAACW,KAAM,CAACR,EAAE,CAAEH,OAAO,CAACG,EAAG,CACrHN,qBAAqB,CAAEA,qBAAsB,CAAE,CAAC,EAE5D,CAAC,CAED,KAAM,CAAAwD,cAAc,CAAGA,CAAA,GAAM,CACzB,GAAI9E,QAAQ,CAACyD,MAAM,GAAK,CAAC,CAAE,CACvB;AAAA,CACH,IACI,CAED,KAAM,CAAAsB,uBAAuB,CAAG,EAAE,CAClC,KAAM,CAAAhB,WAAW,CAAGD,6BAA6B,CAAC,CAAC,CAAE;AAErD,IAAK,GAAI,CAAAU,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGT,WAAW,CAAC,CAAC,CAAC,CAACN,MAAM,CAAEe,CAAC,EAAE,CAAE,CAC5C,KAAM,CAAAQ,4BAA4B,CAAGZ,eAAe,CAACL,WAAW,CAAEA,WAAW,CAAC,CAAC,CAAC,CAACS,CAAC,CAAC,CAAE,CAAC,CAAC,CACvF,IAAK,GAAI,CAAAG,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGK,4BAA4B,CAACvB,MAAM,CAAEkB,CAAC,EAAE,CAAE,CAC1DI,uBAAuB,CAACZ,IAAI,cACxBhF,KAAK,CAAC8F,YAAY,CAACD,4BAA4B,CAACL,CAAC,CAAC,CAAE,CAAEO,GAAG,CAAEF,4BAA4B,CAACL,CAAC,CAAC,CAACQ,KAAK,CAACvD,EAAG,CAAC,CACzG,CAAC,CACL,CACJ,CAEA,MAAO,CAAAmD,uBAAuB,CAClC,CACJ,CAAC,CAED,KAAM,CAAA1D,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC7B,KAAM,CAAA+D,SAAS,CAAG,KAAM,CAAAvD,KAAK,CAAC9B,QAAQ,CAAC4B,KAAK,CAAC0D,WAAW,CAAC,CACzD,KAAM,CAAAC,eAAe,CAAG,KAAM,CAAAF,SAAS,CAAC7B,IAAI,CAAC,CAAC,CAE9CpD,iBAAiB,CAACmF,eAAe,CAACT,OAAO,CAAC,CAE1C,GAAI,CACA;AAEA;AACA;AACA;AAEA;AAGA;AAEAvC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC,CAC3B,CACA,MAAMF,KAAK,CAAE,CACTC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAEF,KAAK,CAAC,CAClC,CACJ,CAAC,CAED,mBACIxC,KAAA,QAAA0F,QAAA,eACI1F,KAAA,QAAK+B,EAAE,CAAC,gCAAgC,CAAA2D,QAAA,eACpC5F,IAAA,QAAKiC,EAAE,CAAC,gBAAgB,CAAA2D,QAAA,CAAExF,QAAQ,CAAC4B,KAAK,CAAC6D,KAAK,CAAM,CAAC,cACrD7F,IAAA,QAAKiC,EAAE,CAAC,gBAAgB,CAAA2D,QAAA,CACnBnF,YAAY,EAAI,IAAI,cACjBT,IAAA,SAAU,CAAC,eAEX;AAEAA,IAAA,QAAKiC,EAAE,CAAC,eAAe,CAAC6D,GAAG,CAAE1F,QAAQ,CAAC4B,KAAK,CAAC+D,SAAU,CAACC,GAAG,CAAE5F,QAAQ,CAAC4B,KAAK,CAAC6D,KAAM,CAAE,CAEtF,CACA,CAAC,cACN7F,IAAA,QAAKiC,EAAE,CAAC,kBAAkB,CAAA2D,QAAA,CACrBrF,cAAc,EAAI,IAAI,cACnBP,IAAA,SAAU,CAAC,cAEXA,IAAA,QAAA4F,QAAA,CAAMrF,cAAc,CAAM,CAC7B,CACA,CAAC,EACL,CAAC,cAENP,IAAA,UAAOiG,IAAI,CAAC,MAAM,CAAChE,EAAE,CAAC,sBAAsB,CAACuB,KAAK,CAAE3C,aAAc,CAC9DqF,WAAW,CAAC,mBAAmB,CAACC,QAAQ,CAAE9C,mBAAoB,CAAQ,CAAC,cAC3ErD,IAAA,WAAQiC,EAAE,CAAC,uBAAuB,CAACmE,OAAO,CAAExE,yBAA0B,CAAAgE,QAAA,CACjE3E,SAAS,cACLjB,IAAA,QAAKqG,SAAS,CAAC,SAAS,CAAM,CAAC,cAC7BrG,IAAA,QAAA4F,QAAA,CAAK,QAER,CAAK,CAAE,CACP,CAAC,cAET1F,KAAA,QAAK+B,EAAE,CAAC,wBAAwB,CAAA2D,QAAA,EAAC,iBAAe,CAACvF,QAAQ,CAACyD,MAAM,EAAM,CAAC,cAEvE9D,IAAA,QAAKqG,SAAS,CAAC,kBAAkB,CAAAT,QAAA,CAC5B7E,eAAe,CAAGoE,cAAc,CAAC,CAAC,cAAGnF,IAAA,MAAA4F,QAAA,CAAG,qBAAmB,CAAG,CAAC,CAW/D,CAAC,EACL,CAAC,CAGd,CAAC,CAED,cAAe,CAAAzF,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}